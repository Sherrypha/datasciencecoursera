features$V2
as.character(features$V2)
features$V2
variables<-c(c("Subject","Activity"), as.character(features$V2))
colnames(data)<-variables
grep("mean+(){1,1}|std+()",as.character(features$V2))
grep("mean())|std",as.character(features$V2))
grep("mean()|std",as.character(features$V2))
grep("mean()|std()",as.character(features$V2), Value=TRUE)
grep("mean()|std()",as.character(features$V2), v=TRUE)
grep("(mean())|std()",as.character(features$V2), v=TRUE)
grep("(mean()-)|std()",as.character(features$V2), v=TRUE)
grep("(mean()-|std()-",as.character(features$V2), v=TRUE)
grep("mean()-|std()-",as.character(features$V2), v=TRUE)
grep("mean()\-|std()\-",as.character(features$V2), v=TRUE)
grep("mean()\\-|std()\-",as.character(features$V2), v=TRUE)
grep("mean()|std()",as.character(features$V2), v=TRUE)
grep("mean()\W|std()",as.character(features$V2), v=TRUE)
grep("mean\W|std()",as.character(features$V2), v=TRUE)
grep("mean\\W|std()",as.character(features$V2), v=TRUE)
grep("mean()\\W-|std()\\W",as.character(features$V2), v=TRUE)
grep("mean\\W-|std\\W",as.character(features$V2), v=TRUE)
grep("mean\\W|std\\W",as.character(features$V2), v=TRUE)
select(test,grep("mean\\W|std\\W",as.character(features$V2), v=TRUE))
select(test,grep("mean\\W|std\\W",as.character(features$V2))
)
variables<-c(c("Subject","Activity"),grep("mean\\W|std\\W",as.character(features$V2), v=TRUE))
variables<-c(c("Subject","Activity"),features$V2)
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,X_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,X_train)
#merge test and train data sets
data<-rbind(test,train)
##extractmean & std measures
#set colnames for merged data set
variables<-c(c("Subject","Activity"),features$V2)
colnames(data)<- c(c("Subject","Activity"),features$V2)
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,X_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,X_train)
#merge test and train data sets
data<-rbind(test,train)
##extractmean & std measures
#set colnames for merged data set
variables<-c(c("Subject","Activity"),features$V2)
colnames(data)<- c(c("Subject","Activity"),as.character(features$V2))
ms_data<-select(data,grep("mean\\W|std\\W",as.character(features$V2), v=TRUE))
ms_data<-select(data,variables)
variables<-c(c("Subject","Activity"),as,character(features$V2))
variables<-c(c("Subject","Activity"),as.character(features$V2))
ms_data<-select(data,variables)
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,X_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,X_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("Subject","Activity"),as.character(features$V2))
colnames(data)<- c(c("Subject","Activity"),as.numeric(features$V1))
#extractmean & std measures
ms_data<-select(data,grep("mean\\W|std\\W",as.character(features$V2), ))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,X_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,X_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("Subject","Activity"),as.character(features$V2))
colnames(data)<- c(c("Subject","Activity"),as.numeric(features$V1))
#extractmean & std measures
ms_data<-select(data,grep("Subject","Activity","mean\\W|std\\W",as.character(features$V2), ))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,X_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,X_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("Subject","Activity"),as.character(features$V2))
colnames(data)<- c(c("Subject","Activity"),as.numeric(features$V1))
#extractmean & std measures
ms_data<-select(data,"Subject","Activity",grep("mean\\W|std\\W",as.character(features$V2), ))
View(ms_data)
grep("mean\\W|std\\W",as.character(features$V2)
)
# extract mean n std measures for tran and test sets
ms_test<-select(x_test,grep("mean\\W|std\\W",as.character(features$V2)))
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("Subject","Activity"),grep("mean\\W|std\\W",as.character(features$V2),value=TRUE))
colnames(data)<- c(c("Subject","Activity"),variables)
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("Subject","Activity"),grep("mean\\W|std\\W",as.character(features$V2),value=TRUE))
colnames(data)<- variables
#extractmean & std measures
#ms_data<-select(data,"Subject","Activity",grep("mean\\W|std\\W",as.character(features$V2), ))
rm(list = ms_data)
rm( ms_data)
View(data)
View(activity_labels)
activity_list= as.list(activity_labels$V1,activity_labels$V2)
View(activity_list)
activity_list= as.list(activity_labels$V1,as.character(activity_labels$V2))
View(activity_list)
activity_list= as.list(as.character(activity_labels$V2),as.character(activity_labels$V1))
View(activity_list)
View(activity_list)
activity_list= as.list(activity_labels$V1,as.character(activity_labels$V2))
View(activity_list)
View(activity_labels)
View(activity_list)
activity_list= as.list(activity_labels$V1,as.character(activity_labels$V2))
View(activity_list)
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
View(activity_list)
View(activity_list)
activity_list= as.list(activity_labels$V1,as.character(activity_labels$V2))
View(activity_list)
activity_list= as.list(as.numeric(activity_labels$V1),as.character(activity_labels$V2))
View(activity_list)
?as.list
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
View(activity_list)
View(activity_labels)
recode_factor(data$Activity, !!!activity_list)
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("subject","activity"),grep("mean\\W|std\\W",as.character(features$V2),value=TRUE))
colnames(data)<- variables
#give activities in the data set a descriptive name
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
recode_factor(data$activity, !!!activity_list)
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("subject","activity"),grep("mean\\W|std\\W",as.character(features$V2),value=TRUE))
colnames(data)<- variables
#give activities in the data set a descriptive name
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
data$activity<-recode_factor(data$activity, !!!activity_list)
group_by(data, subject)
group_by(data, activity)
group_by(data, subject, activity)
summarise(data,average)
summarise(data,mean)
data  %>%
group_by(subject,activity) %>%
summarise_all(mean)
data  %>%
group_by(activity,subject) %>%
summarise_all(mean)
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("subject","activity"),
tolower(grep("mean\\W|std\\W",
as.character(features$V2),value=TRUE)))
colnames(data)<- variables
#give activities in the data set a descriptive name
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
data$activity<-recode_factor(data$activity, !!!activity_list)
mean_data <-data  %>%
group_by(activity,subject) %>%
summarise_all(mean)
View(mean_data)
y<-features %>% x<-(grep("mean\\W|std\\W", as.character(features$V2),value=TRUE) %>% tolower(x) %>% gsub("()","",x)
)
y<-features %>% x<-(grep("mean\\W|std\\W", as.character(features$V2),value=TRUE) )%>% tolower(x) %>% gsub("()","",x)
y<-features %>% x<-(grep("mean\\W|std\\W", as.character(features$V2),value=TRUE))%>% tolower(x) %>% gsub("()","",x)
y<-features %>% x<-tolower(grep("mean\\W|std\\W", as.character(features$V2),value=TRUE))) %>% gsub("()","",x)()
y<-features %>% x<-tolower(grep("mean\\W|std\\W", as.character(features$V2),value=TRUE))) %>% gsub("()","",x)
y<-features %>% x<-tolower(grep("mean\\W|std\\W", as.character(features$V2),value=TRUE)) %>% gsub("()","",x)
y<-features %>% x<-tolower(grep("mean\\W|std\\W", as.character(features$V2),value=TRUE)) %>% gsub("()","")
y<-features %>% grep("mean\\W|std\\W", as.character(features$V2),value=TRUE) %>% gsub("()","") %>% tolower()
gsub("()","", variables)
gsub("\\()","", variables)
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("subject","activity"),
tolower(grep("mean\\W|std\\W",
as.character(features$V2),value=TRUE)))
gsub("\\()","", variables)
colnames(data)<- variables
#give activities in the data set a descriptive name
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
data$activity<-recode_factor(data$activity, !!!activity_list)
View(mean_data)
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("subject","activity"),
tolower(grep("mean\\W|std\\W",
as.character(features$V2),value=TRUE)))
variables<-gsub("\\()","", variables)
colnames(data)<- variables
#give activities in the data set a descriptive name
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
data$activity<-recode_factor(data$activity, !!!activity_list)
View(mean_data)
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("subject","activity"),
tolower(grep("mean\\W|std\\W",
as.character(features$V2),value=TRUE)))
variables<-gsub("\\()","", variables)
colnames(data)<- variables
#give activities in the data set a descriptive name
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
data$activity<-recode_factor(data$activity, !!!activity_list)
mean_data <-data  %>%
group_by(activity,subject) %>%
summarise_all(mean)
View(mean_data)
?write.table
write.table(mean_data, file = "tidydata.txt", sep = " ", row.names = FALSE)
Data <- within(Data,{
description(vote) <- "Vote intention"
description(region) <- "Region of residence"
description(income) <- "Household income"
wording(vote) <- "If a general election would take place next tuesday,
the candidate of which party would you vote for?"
wording(income) <- "All things taken into account, how much do all
household members earn in sum?"
foreach(x=c(vote,region),{
measurement(x) <- "nominal"
})
measurement(income) <- "ratio"
labels(vote) <- c(
Conservatives         =  1,
Labour                =  2,
"Liberal Democrats"   =  3,
"Don't know"          =  8,
"Answer refused"      =  9,
"Not applicable"      = 97,
"Not asked in survey" = 99)
labels(region) <- c(
England               =  1,
Scotland              =  2,
Wales                 =  3,
"Not applicable"      = 97,
"Not asked in survey" = 99)
foreach(x=c(vote,region,income),{
annotation(x)["Remark"] <- "This is not a real survey item, of course ..."
})
missing.values(vote) <- c(8,9,97,99)
missing.values(region) <- c(97,99)
})
description(Data)
codebook(Data)
# }
# NOT RUN {
Write(descrition(Data),
file="Data-desc.txt")
Write(codebook(Data),
file="Data-cdbk.txt")
# }
#copy
write.table(mean_data, file = "tidydata.txt", sep = " ", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#download project data set
if(!file.exists("./data")){dir.create("./data");download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="dataset.zip" )}
#unzipdata
if(!file.exists("./UCI HAR Dataset")){unzip(".data/dataset.zip")}
#read datasets
activity_labels<-tbl_df(read.table("./UCI HAR Dataset/activity_labels.txt"))
features<-tbl_df(read.table("./UCI HAR Dataset/features.txt"))
subject_train<-tbl_df(read.table("./UCI HAR Dataset/train/subject_train.txt"))
X_train<-tbl_df(read.table("./UCI HAR Dataset/train/X_train.txt"))
Y_train<-tbl_df(read.table("./UCI HAR Dataset/train/Y_train.txt"))
subject_test<-tbl_df(read.table("./UCI HAR Dataset/test/subject_test.txt"))
X_test<-tbl_df(read.table("./UCI HAR Dataset/test/X_test.txt"))
Y_test<-tbl_df(read.table("./UCI HAR Dataset/test/Y_test.txt"))
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("subject","activity"),
tolower(grep("mean\\W|std\\W",
as.character(features$V2),value=TRUE)))
variables<-gsub("\\()","", variables)
colnames(data)<- variables
#give activities in the data set a descriptive name
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
data$activity<-recode_factor(data$activity, !!!activity_list)
mean_data <-data  %>%
group_by(activity,subject) %>%
summarise_all(mean)
#copy
write.table(mean_data, file = "tidydata.txt", sep = " ", row.names = FALSE)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#download project data set
if(!file.exists("./data")){dir.create("./data");download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/dataset.zip" )}
#unzipdata
if(!file.exists("./UCI HAR Dataset")){unzip(".data/dataset.zip")}
#read datasets
activity_labels<-tbl_df(read.table("./UCI HAR Dataset/activity_labels.txt"))
#download project data set
if(!file.exists("./data")){dir.create("./data");download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/dataset.zip" )}
#unzipdata
unzip(".data/dataset.zip")
#read datasets
activity_labels<-tbl_df(read.table("./UCI HAR Dataset/activity_labels.txt"))
unzip(".data/dataset.zip")
?unzip
unzip("dataset.zip")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#download project data set
if(!file.exists("./data")){dir.create("./data");download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/UCI HAR Dataset.zip" )}
#unzipdata
if(!file.exists("./UCI HAR Dataset")){unzip(".data/UCI HAR Dataset.zip")}
#read datasets
activity_labels<-tbl_df(read.table("./UCI HAR Dataset/activity_labels.txt"))
#download project data set
if(!file.exists("./data")){dir.create("./data");download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/UCI HAR Dataset.zip" )}
#unzipdata
if(!file.exists("./UCI HAR Dataset")){unzip(".data/UCI HAR Dataset.zip")}
#read datasets
activity_labels<-tbl_df(read.table("./UCI HAR Dataset/activity_labels.txt"))
#download project data set
if(!file.exists("./data")){dir.create("./data");download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/UCI HAR Dataset.zip" )}
#unzipdata
if(!file.exists("./UCI HAR Dataset")){unzip(".data/UCI HAR Dataset.zip")}
#read datasets
activity_labels<-tbl_df(read.table("./UCI HAR Dataset/activity_labels.txt"))
#download project data set
if(!file.exists("./data")){dir.create("./data")};download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/UCI HAR Dataset.zip" )
#unzipdata
if(!file.exists("./UCI HAR Dataset")){unzip(".data/UCI HAR Dataset.zip")}
#read datasets
activity_labels<-tbl_df(read.table("./UCI HAR Dataset/activity_labels.txt"))
unzip(".data/UCI HAR Dataset.zip"
)
unz(".data/UCI HAR Dataset.zip")
?unz
unzip(".data/UCI HAR Dataset.zip", list=TRUE)
getwd()
unzip(".data/UCI HAR Dataset.zip", list=TRUE)
#unzipdata
if(!file.exists("./data/UCI HAR Dataset")){unzip("./data/UCI HAR Dataset.zip")}
unzip(".data/UCI HAR Dataset.zip", list=TRUE)
?unzip
setwd("./data")
getwd()
setwd("../")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#download project data set
if(!file.exists("./data")){dir.create("./data")};download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/UCI HAR Dataset.zip" )
#unzipdata
setwd("./data")
if(!file.exists("./data/UCI HAR Dataset")){unzip("./data/UCI HAR Dataset.zip")}
setwd("../")
#read datasets
activity_labels<-tbl_df(read.table("./data/UCI HAR Dataset/activity_labels.txt"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#download project data set
if(!file.exists("./data")){dir.create("./data")};download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/UCI HAR Dataset.zip" )
#unzipdata
setwd("./data")
unzip("./data/UCI HAR Dataset.zip")
setwd("../")
#read datasets
activity_labels<-tbl_df(read.table("./data/UCI HAR Dataset/activity_labels.txt"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
#download project data set
if(!file.exists("./data")){dir.create("./data")};download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="./data/UCI HAR Dataset.zip" )
#unzipdata
setwd("./data")
unzip("UCI HAR Dataset.zip")
setwd("../")
#read datasets
activity_labels<-tbl_df(read.table("./data/UCI HAR Dataset/activity_labels.txt"))
features<-tbl_df(read.table("./data/UCI HAR Dataset/features.txt"))
subject_train<-tbl_df(read.table("./data/UCI HAR Dataset/train/subject_train.txt"))
X_train<-tbl_df(read.table("./data/UCI HAR Dataset/train/X_train.txt"))
Y_train<-tbl_df(read.table("./data/UCI HAR Dataset/train/Y_train.txt"))
subject_test<-tbl_df(read.table("./data/UCI HAR Dataset/test/subject_test.txt"))
X_test<-tbl_df(read.table("./data/UCI HAR Dataset/test/X_test.txt"))
Y_test<-tbl_df(read.table("./data/UCI HAR Dataset/test/Y_test.txt"))
# extract mean n std measures for tran and test sets
ms_test<-select(X_test,grep("mean\\W|std\\W",as.character(features$V2)))
ms_train<-select(X_train,grep("mean\\W|std\\W",as.character(features$V2)))
#bind test subject, set and labels
test<-cbind(subject_test,Y_test,ms_test)
#bind train subject, set and labels
train<-cbind(subject_train,Y_train,ms_train)
#merge test and train data sets
data<-rbind(test,train)
#set colnames for merged data set
variables<-c(c("subject","activity"),
tolower(grep("mean\\W|std\\W",
as.character(features$V2),value=TRUE)))
variables<-gsub("\\()","", variables)
colnames(data)<- variables
#give activities in the data set a descriptive name
activity_list= as.list(as.character(activity_labels$V2),as.numeric(activity_labels$V1))
data$activity<-recode_factor(data$activity, !!!activity_list)
mean_data <-data  %>%
group_by(activity,subject) %>%
summarise_all(mean)
#write tidy data set to
write.table(mean_data, file = "tidydata.txt", sep = " ", row.names = FALSE)
install.packages("codebook")
library(codebook)
?codebook
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Getting and cleaning data/GCD Course Project/run_analysis.R')
library(dplyr)
rm(list=ls())
library(dplyr)
#
# 1. Use group_by() (from dplyr) to group the data by part and
# sex, in that order.
#
# 2. Use mutate to add two new columns, whose values will be
# automatically computed group-by-group:
#
#   * total = sum(count)
#   * prop = count / total
#
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part,sex) %>%
mutate(total=sum(count),
prop=count/total) %>%
print
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Getting and cleaning data/GCD Course Project/run_analysis.R')
run_analysis()
library(dplyr)
run_analysis()
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Getting and cleaning data/GCD Course Project/run_analysis.R')
run_analysis()
