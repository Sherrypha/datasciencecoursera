pollutantmean("specdata", "nitrate",70:72)
mean(try[,c(0)] ,na.rm =TRUE)
pollutant_data <-read.csv("specdata/001.csv", header = TRUE )
summary(pollutant_data)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate",1:10)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate",1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
?pdata
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
mean(pollutantmean("specdata", "sulfate", 1:10))
?sum
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
View(correctfilename)
!is.na(v)
nrow(!is.na(v))
colSums(!is.na(v))
colSums(!is.na(try[,c(1)))
colSums(!is.na(try[,c(1)]))
colSums(!is.na(try))
r<-colSums(!is.na(try))
r
length(v[!is.na(v)])
length(try[,c(1)])
length(!is.na(try[,c(1)]))
length(try[,c(1)][!is.na(try[,c(1)])])
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
?complete.cases
complete.cases(pollutant_data)
x <-pollutant_data[,c[2]]
x <-pollutant_data[,c(2)]
y <-pollutant_data[,c(3)]
complete.cases(x, y)
sum(complete.cases(pollutant_data))
n = c(2, 3, 5)
> s = c("aa", "bb", "cc")
> b = c(TRUE, FALSE, TRUE)
> df = data.frame(n, s, b)
n = c(2, 3, 5)
s = c("aa", "bb", "cc")
b = c(TRUE, FALSE, TRUE)
df = data.frame(n, s, b)
df
df = data.frame("id","nobs")
df
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
length(list.files("specdata"))
complete.cases(pollutant_data[2])
complete.cases(pollutant_data[[2]])
complete.cases(pollutant_data[2,])
length(pollutant_data)
nrows(pollutant_data)
nrow(pollutant_data)
pollutant_data[complete.cases(pollutant_data)]
pollutant_data[complete.cases(pollutant_data$sulfate)] && pollutant_data[complete.cases(pollutant_data$nitrate]
pollutant_data[complete.cases(pollutant_data$sulfate)] & pollutant_data[complete.cases(pollutant_data$nitrate]
pollutant_data[complete.cases(pollutant_data$sulfate),]& pollutant_data[complete.cases(pollutant_data$nitrate),]
pollutant_data[complete.cases(pollutant_data$sulfate, pollutant_data$nitrate)]
pollutant_data{complete.cases(pollutant_data[,1:4])}
pollutant_data[complete.cases(pollutant_data[,1:4])]
pollutant_data[complete.cases(pollutant_data[,1:4]),]
t <-pollutant_data[complete.cases(pollutant_data[,1:4]),]
x <- t[names(t)=="sulfate"][,c(1)]
x =append(x, t[names(t)=="sulfate"][,c(1)])
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr
cr <- corr("specdata", 150)
cr
source("corr.R")
cr
cr <- corr("specdata", 150)
cr
x <- t[names(t)=="sulfate"][,c(1)]
y <- t[names(t)=="nitrate"][,c(1)]
cor(x,y, use = "everything")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
swirl()
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
51=7
5!=7
5!=7
!(5 ==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE,FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
('My first
| function!')
('My first function!')
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
?sd
evaluate(sd, c(1.4, 3.6, 7.9, 8.8) )
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("I love my aisha")
setwd("C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera")
swirl()
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function()
boring_function('My first funtion!')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
(4, div = 2)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[,1]},c(8,4,0))
evaluate(function(x){x[1,]},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
SUBMIT()
submit()
telegram("Aisha","likes","pooping")
submit9
submit()
submit()
?list
mad_libs function(list(place="Abbeywood",adjective="horrid",noun="peter"))
mad_libs(list(place="Abbeywood",adjective="horrid",noun="peter"))
submit()
submit()
submit()
'I' %p% 'love' %p%'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time()).
t2<-as.POSIXlt(Sys.time())
class(ga)
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(d1)
months(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
sys,time()>t1
sys.time()>t1
Sys.time()>t1
Sys.time - >t1
Sys.time - t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
head(flags)
dim(flags)
viewinfo()
class(flags)
Type cls_list <- lapply(flags, class)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range(0))
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat -> sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals(lapply(flags),unique)
unique_vals<-lapply(9flags),unique)
unique_vals<-lapply((flags),unique)
unique_vals<-lapply(flags,unique)
unique_vals
apply(flags$name,unique)
lapply(flags$name,unique)
sapply(flags$name,unique)
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
library(datasets)
data(iris)
?iris
iris
sapply(iris$Sepal.Length,mean)
which(iris$Species="virginica")
which(iris$Species=="virginica")
iris$Species=="virginica"
iris[,iris$Species=="virginica"]
iris[,which(iris$Species=="virginica")]
iris[iris$Species=="virginica"]
iris[,iris$Species=="virginica"]
iris[,iris$Species=="virginica"]
iris[,iris$Species=="virginica"]
lapply(iris, mean)
iris[iris$Species=="virginica",]
lapply(iris[iris$Species=="virginica",],mean)
lapply(iris[iris$Species=="virginica",],mean,na.rm=TRUE)
apply(iris[iris$Species=="virginica",],2,mean,na.rm=TRUE)
V <- c(iris[iris$Species=="virginica",])
apply(v,2,mean)
length(v)
dim(v)
V <- iris[iris$Species=="virginica",]
dim(v)
apply(v,2,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
?split
?mtcars
split(mtcars,mtcars$cyl)
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mpg, cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
x<-tapply(mtcars$hp, mtcars$cyl, mean)
x[3,]-x[1,]
x[,3]-x[,1]
x
debug(ls)
ls
ls(x)
x = numeric()
ddd
Q
undebug(ls)
undebug(ls)
q
undebug(ls)
Q
sample_matrix<-> B = matrix( c(2, 4, 3, 1, 5, 7), nrow=3,  ncol=2)
sample_matrix<- matrix( c(2, 4, 3, 1, 5, 7), nrow=3,  ncol=2)
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Rprog-Week3/makecachevector.R')
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Rprog-Week3/makecachevector.R')
cachemean(c(1,2,3,4,5,6,7,8,9,10))
r <- makevector(c(1,2,3,4,5,6,7,8,9,10))
r <- makeVector(c(1,2,3,4,5,6,7,8,9,10))
cachemean(r)
r <-matrix()
?r
class(r)
matrix(c(4,2,7,6),nrow =2, ncol=2)
r->matrix(c(4,2,7,6),nrow =2, ncol=2)
r<-matrix(c(4,2,7,6),nrow =2, ncol=2)
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Rprog-Week3/makesolvematrix.R')
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Rprog-Week3/makesolvematrix.R')
makeCacheMAtrix(r)
r<-makeCacheMatrix(matrix(c(4,2,7,6),nrow =2, ncol=2))
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Rprog-Week3/makesolvematrix.R')
r<-makeCacheMatrix(matrix(c(4,2,7,6),nrow =2, ncol=2))
cacheSolve(r)
source('C:/Users/Sherifat A-Shitu/OneDrive/Documents/datasciencecoursera/Rprog-Week3/ProgrammingAssignment2/cachematrix.R')
r<-makeCacheMatrix(matrix(c(4,2,7,6),nrow =2, ncol=2))
cacheSolve(r)
inverse(matrix(c(4,2,7,6),nrow =2, ncol=2))
